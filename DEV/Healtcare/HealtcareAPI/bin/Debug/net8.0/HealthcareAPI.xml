<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HealthcareAPI</name>
    </assembly>
    <members>
        <member name="T:HealthcareAPI.Controllers.AuthController">
            <summary>
            Authorize and Autentication
            </summary>
        </member>
        <member name="M:HealthcareAPI.Controllers.AuthController.Login(Healthcare.Common.DTO.LoginDTO)">
            <summary>
            Autentication
            </summary>
            <param name="loginDTO">Healthcare.Common.DTO.LoginDTO</param>
            <returns>{ Token, userDTO.User_ID, user_Rol} </returns>
        </member>
        <member name="M:HealthcareAPI.Controllers.AuthController.GenerateJwtToken(System.String)">
            <summary>
             Get Anti-CSRF token
            </summary>
            <see cref="T:Microsoft.Extensions.Configuration.IConfiguration">
            "Jwt:Key"       : key from appsettings.json
            "Jwt:Issuer"    : Issuer from appsettings.json
            "Jwt:Audience"  : Audience from appsettings.json
            </see>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="T:HealthcareAPI.Controllers.Follow_UpController">
            <summary>
            Patient follow-up 
            </summary>
        </member>
        <member name="M:HealthcareAPI.Controllers.Follow_UpController.GetAllFollow_Up(System.Int32)">
            <summary>
            Get follow-ups by patient
            </summary>
            <param name="idPatient">idPatient</param>
            <returns>IEnumerable of Healthcare.Common.DTO.Follow_UpDTO</returns>
        </member>
        <member name="M:HealthcareAPI.Controllers.Follow_UpController.GetFollow_UpById(System.Int32)">
            <summary>
            Get an specific follow-up
            </summary>
            <param name="id">Unique identify of the follow-up</param>
            <returns>Healthcare.Common.DTO.Follow_UpDTO</returns>
        </member>
        <member name="M:HealthcareAPI.Controllers.Follow_UpController.AddFollow_Up(Healthcare.Common.DTO.Follow_UpDTO)">
            <summary>
            Add new follow-up from patient in database
            </summary>
            <param name="follow_UpDto">Healthcare.Common.DTO.Follow_UpDTO</param>
            <returns>void</returns>
        </member>
        <member name="M:HealthcareAPI.Controllers.Follow_UpController.UpdateFollow_Up(Healthcare.Common.DTO.Follow_UpDTO)">
            <summary>
            Modify or edit follow-up
            </summary>
            <param name="follow_UpDto">Healthcare.Common.DTO.Follow_UpDTO</param>
            <returns>void</returns>
        </member>
        <member name="M:HealthcareAPI.Controllers.Follow_UpController.DeleteFollow_Up(System.Int32)">
            <summary>
            Delete an existing follow-up
            </summary>
            <param name="id">Follow_Up_ID</param>
            <returns>void</returns>
        </member>
        <member name="T:HealthcareAPI.Controllers.Role_By_UserController">
            <summary>
            Role_By_User service
            </summary>
        </member>
        <member name="M:HealthcareAPI.Controllers.Role_By_UserController.GetAllRol_By_User_By_IdUser(System.Int32)">
            <summary>
            Get rol by user
            </summary>
            <param name="idUser">User unique id</param>
            <returns>IEnumerable of Healthcare.Common.DTO.Role_By_UserDTO</returns>
        </member>
        <member name="M:HealthcareAPI.Controllers.Role_By_UserController.GetRol_By_UserById(System.Int32)">
            <summary>
            Get an specific follow-up
            </summary>
            <param name="id">Unique identify of the follow-up</param>
            <returns>Healthcare.Common.DTO.Role_By_UserDTO</returns>
        </member>
        <member name="T:HealthcareAPI.Controllers.UserController">
            <summary>
            User service
            </summary>
        </member>
        <member name="M:HealthcareAPI.Controllers.UserController.GetAllUsers">
            <summary>
            List all User
            </summary>
            <returns></returns>
        </member>
        <member name="M:HealthcareAPI.Controllers.UserController.GetUserById(System.Int32)">
            <summary>
            Get the User by filtering by id
            </summary>
            <param name="id">is the unique ID in the table</param>
            <returns>Healthcare.Common.DTO.UserDTO</returns>
        </member>
        <member name="M:HealthcareAPI.Controllers.UserController.AddUser(Healthcare.Common.DTO.AddUpdateUserDTO)">
            <summary>
            Add new User in database
            </summary>
            <param name="userDTO">Healthcare.Common.DTO.UserDTO</param>
            <returns>NoContent()</returns>
        </member>
        <member name="M:HealthcareAPI.Controllers.UserController.UpdateUser(Healthcare.Common.DTO.AddUpdateUserDTO)">
            <summary>
            Modify or edit User
            </summary>
            <param name="userDTO">Healthcare.Common.DTO.UserDTO</param>
            <returns>NoContent()</returns>
        </member>
        <member name="M:HealthcareAPI.Controllers.UserController.DeleteUser(System.Int32)">
            <summary>
            Delete an existing User
            </summary>
            <param name="id">User_ID</param>
            <returns>NoContent()</returns>
        </member>
        <member name="T:HealthcareAPI.Logs.ExceptionHandlingMiddleware">
            <summary>
            Captures errors and saves them to a local file
            </summary>
        </member>
        <member name="M:HealthcareAPI.Logs.ExceptionHandlingMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{HealthcareAPI.Logs.ExceptionHandlingMiddleware},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            write the errors to the api-error.log file in a physical path. 
            </summary>
            <see cref="T:Microsoft.Extensions.Configuration.IConfiguration">
            "LogSettings:LogFilePath"       : local routine where the log configured in appsetting.json is stored
            </see>
            <param name="next"></param>
            <param name="logger"></param>
            <param name="config"></param>
        </member>
        <member name="M:HealthcareAPI.Logs.ExceptionHandlingMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            captures the invocation
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:HealthcareAPI.Logs.ExceptionHandlingMiddleware.HandleExceptionAsync(Microsoft.AspNetCore.Http.HttpContext,System.Exception)">
            <summary>
            captures the error and writes it to the file
            </summary>
            <param name="context"></param>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="T:HealthcareAPI.Logs.ExceptionHandlingMiddlewareExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:HealthcareAPI.Logs.ExceptionHandlingMiddlewareExtensions.UseExceptionHandlingMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Exception handler extension
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:HealthcareAPI.Logs.ExceptionHandlingMiddlewareExtensions.ConfigureCorsFromConfig(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Extension of domains authorised to access the service. Productive environment only
            </summary>
            <see cref="T:Microsoft.Extensions.Configuration.IConfiguration">
            "Cors:AllowedOrigins"       : domains authorised to access the service, configurable in appsetting.json
            </see>
            <param name="services"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:HealtcareAPI.Controllers.PatientController">
            <summary>
            Patient service
            </summary>
        </member>
        <member name="M:HealtcareAPI.Controllers.PatientController.GetAllPatients">
            <summary>
            List all patient
            </summary>
            <returns></returns>
        </member>
        <member name="M:HealtcareAPI.Controllers.PatientController.GetPatientById(System.Int32)">
            <summary>
            Get the patient by filtering by id
            </summary>
            <param name="id">is the unique ID in the table</param>
            <returns>Healthcare.Common.DTO.PatientDTO</returns>
        </member>
        <member name="M:HealtcareAPI.Controllers.PatientController.AddPatient(Healthcare.Common.DTO.PatientDTO)">
            <summary>
            Add new patient in database
            </summary>
            <param name="patientDto">Healthcare.Common.DTO.PatientDTO</param>
            <returns>void</returns>
        </member>
        <member name="M:HealtcareAPI.Controllers.PatientController.UpdatePatient(Healthcare.Common.DTO.PatientDTO)">
            <summary>
            Modify or edit patient
            </summary>
            <param name="patientDto">Healthcare.Common.DTO.PatientDTO</param>
            <returns>NoContent()</returns>
        </member>
        <member name="M:HealtcareAPI.Controllers.PatientController.DeletePatient(System.Int32)">
            <summary>
            Delete an existing patient
            </summary>
            <param name="id">Patient_ID</param>
            <returns>NoContent()</returns>
        </member>
    </members>
</doc>
