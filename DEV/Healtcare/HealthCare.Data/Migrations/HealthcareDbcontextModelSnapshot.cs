// <auto-generated />
using System;
using HealthCare.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthCare.Data.Migrations
{
    [DbContext(typeof(HealthcareDbcontext))]
    partial class HealthcareDbcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HealthCare.Data.Entity.Follow_Up", b =>
                {
                    b.Property<int>("Follow_Up_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Follow_Up_ID"));

                    b.Property<string>("Allergy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modify_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Patient_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Registration_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Registration_User_ID")
                        .HasColumnType("int");

                    b.Property<string>("Screening")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symptom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Update_User_ID")
                        .HasColumnType("int");

                    b.HasKey("Follow_Up_ID");

                    b.HasIndex("Patient_ID");

                    b.ToTable("Follow_Ups");
                });

            modelBuilder.Entity("HealthCare.Data.Entity.Patient", b =>
                {
                    b.Property<int>("Patient_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Patient_ID"));

                    b.Property<DateTime>("Birth_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Family_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modify_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Registration_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Registration_User_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Update_User_ID")
                        .HasColumnType("int");

                    b.HasKey("Patient_ID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("HealthCare.Data.Entity.Role", b =>
                {
                    b.Property<int>("Role_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Role_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Role_ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Role_ID = 1,
                            Description = "the user has access to the entire system",
                            Name = "ADMIN"
                        },
                        new
                        {
                            Role_ID = 2,
                            Description = "user has limited access",
                            Name = "USER"
                        });
                });

            modelBuilder.Entity("HealthCare.Data.Entity.Role_By_User", b =>
                {
                    b.Property<int>("Role_By_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Role_By_User_Id"));

                    b.Property<int>("Role_ID")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Role_By_User_Id");

                    b.HasIndex("Role_ID");

                    b.HasIndex("User_ID", "Role_ID")
                        .IsUnique();

                    b.ToTable("Roles_By_Users");
                });

            modelBuilder.Entity("HealthCare.Data.Entity.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"));

                    b.Property<DateTime>("Birth_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Family_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modify_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Registration_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Registration_User_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Update_User_ID")
                        .HasColumnType("int");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HealthCare.Data.Entity.Follow_Up", b =>
                {
                    b.HasOne("HealthCare.Data.Entity.Patient", "Patient")
                        .WithMany("Follow_Up_By_Patient")
                        .HasForeignKey("Patient_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HealthCare.Data.Entity.Role_By_User", b =>
                {
                    b.HasOne("HealthCare.Data.Entity.Role", "Role")
                        .WithMany("User_By_Role")
                        .HasForeignKey("Role_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthCare.Data.Entity.User", "User")
                        .WithMany("Role_By_Users")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthCare.Data.Entity.Patient", b =>
                {
                    b.Navigation("Follow_Up_By_Patient");
                });

            modelBuilder.Entity("HealthCare.Data.Entity.Role", b =>
                {
                    b.Navigation("User_By_Role");
                });

            modelBuilder.Entity("HealthCare.Data.Entity.User", b =>
                {
                    b.Navigation("Role_By_Users");
                });
#pragma warning restore 612, 618
        }
    }
}
